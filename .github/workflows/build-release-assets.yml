name: Build all packages for release assets
on:
  release:
    types: [published]
env:
  asset-folder: './assets'
  asset-name: example-visualizations-${{ github.event.release.tag_name }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.16.1'

      - name: Create asset folder
        shell: bash
        run: mkdir ${{ env.asset-folder }}

      - name: Build EChartsBarChart
        id: build-EChartsBarChart
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/EChartsBarChart'
          asset-directory: ${{ env.asset-folder }}

      - name: Build EChartsRadialTree
        id: build-EChartsRadialTree
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/EChartsRadialTree'
          asset-directory: ${{ env.asset-folder }}

      - name: Build fCoSELayout
        id: build-fCoSELayout
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/fCoSELayout'
          asset-directory: ${{ env.asset-folder }}

      - name: Build ForceDirectedLayout
        id: build-ForceDirectedLayout
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/ForceDirectedLayout'
          asset-directory: ${{ env.asset-folder }}

      - name: Build Lollipop
        id: build-Lollipop
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/Lollipop'
          asset-directory: ${{ env.asset-folder }}

      - name: Build ProcessFlow
        id: build-ProcessFlow
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/ProcessFlow'
          asset-directory: ${{ env.asset-folder }}

      - name: Build StretchedChord
        id: build-StretchedChord
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/StretchedChord'
          asset-directory: ${{ env.asset-folder }}

      - name: Build vNetwork
        id: build-vNetwork
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/vNetwork'
          generate-types: 'true'
          asset-directory: ${{ env.asset-folder }}

      - name: Build WebpackD3MetaModel
        id: build-WebpackD3MetaModel
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/WebpackD3MetaModel'
          asset-directory: ${{ env.asset-folder }}

      - name: Build WebpackD3Visualization
        id: build-WebpackD3Visualization
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/WebpackD3Visualization'
          asset-directory: ${{ env.asset-folder }}

      - name: Build WebpackReactVisualization
        id: build-WebpackReactVisualization
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/WebpackReactVisualization'
          asset-directory: ${{ env.asset-folder }}

      - name: Build WordCloud
        id: build-WordCloud
        uses: ./.github/workflows/actions/build-asset
        with:
          working-directory: './Examples/WordCloud'
          asset-directory: ${{ env.asset-folder }}

      - name: Build D3 Meta Model
        id: build-D3MetaModel
        uses: ./.github/workflows/actions/build-simple-asset
        with:
          working-directory: './Examples/D3\ Meta\ Model'
          asset-directory: ${{ env.asset-folder }}

      - name: Build ECharts Meta Model
        id: build-EChartsMetaModel
        uses: ./.github/workflows/actions/build-simple-asset
        with:
          working-directory: './Examples/ECharts\ Meta\ Model'
          asset-directory: ${{ env.asset-folder }}

      - name: Create asset container
        shell: bash
        run: zip -r --junk-paths ${{ env.asset-name }}.zip ${{ env.asset-folder }} 

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.asset-name }}.zip
          asset_name: ${{ env.asset-name }}.zip
          asset_content_type: application/zip        
